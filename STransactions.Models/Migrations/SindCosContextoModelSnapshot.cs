// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STransactions.Aplicacao.Dados;

#nullable disable

namespace STransactions.Aplicacao.Migrations
{
    [DbContext(typeof(SindCosContexto))]
    partial class SindCosContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmpresaTipoContribuicao", b =>
                {
                    b.Property<int>("EmpresasId")
                        .HasColumnType("int");

                    b.Property<int>("TipoContribuicaoId")
                        .HasColumnType("int");

                    b.HasKey("EmpresasId", "TipoContribuicaoId");

                    b.HasIndex("TipoContribuicaoId");

                    b.ToTable("EmpresaTipoContribuicao");
                });

            modelBuilder.Entity("STransactions.Aplicacao.ModelosBanco.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumeroEmpregados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("STransactions.Aplicacao.ModelosBanco.LogsAplicacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grau")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LogsGeral");
                });

            modelBuilder.Entity("STransactions.Aplicacao.ModelosBanco.LogsEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("LogsEmpresa");
                });

            modelBuilder.Entity("STransactions.Aplicacao.ModelosBanco.SolicitacaoBoleto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Competencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailContato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Solicitacoes");
                });

            modelBuilder.Entity("STransactions.Aplicacao.ModelosBanco.TipoContribuicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoContribuicao");
                });

            modelBuilder.Entity("EmpresaTipoContribuicao", b =>
                {
                    b.HasOne("STransactions.Aplicacao.ModelosBanco.Empresa", null)
                        .WithMany()
                        .HasForeignKey("EmpresasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STransactions.Aplicacao.ModelosBanco.TipoContribuicao", null)
                        .WithMany()
                        .HasForeignKey("TipoContribuicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("STransactions.Aplicacao.ModelosBanco.LogsEmpresa", b =>
                {
                    b.HasOne("STransactions.Aplicacao.ModelosBanco.Empresa", null)
                        .WithMany("LogsDaEmpresa")
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("STransactions.Aplicacao.ModelosBanco.SolicitacaoBoleto", b =>
                {
                    b.HasOne("STransactions.Aplicacao.ModelosBanco.Empresa", null)
                        .WithMany("Solicitacoes")
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("STransactions.Aplicacao.ModelosBanco.Empresa", b =>
                {
                    b.Navigation("LogsDaEmpresa");

                    b.Navigation("Solicitacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
